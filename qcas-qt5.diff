diff -ruN qcas/qt/gui/qtmmlwidget.cpp dev/qcas-qt5/qcas/qt/gui/qtmmlwidget.cpp
--- qcas/qt/gui/qtmmlwidget.cpp	2013-09-15 09:24:04.000000000 +0200
+++ dev/qcas-qt5/qcas/qt/gui/qtmmlwidget.cpp	2013-09-14 13:12:48.000000000 +0200
@@ -5451,7 +5451,7 @@
     QFrame::paintEvent(e);
     QPainter p(this);
     if (e->rect().intersects(contentsRect()))
-        p.setClipRegion(e->region().intersect(contentsRect()));
+        p.setClipRegion(e->region().intersected(contentsRect()));
 
     QSize s = m_doc->size();
     int x = (width() - s.width())/2;
diff -ruN qcas/qt/gui/qtmmlwidget.h dev/qcas-qt5/qcas/qt/gui/qtmmlwidget.h
--- qcas/qt/gui/qtmmlwidget.h	2013-09-15 09:40:11.000000000 +0200
+++ dev/qcas-qt5/qcas/qt/gui/qtmmlwidget.h	2013-09-14 12:05:46.000000000 +0200
@@ -47,6 +47,7 @@
 #ifndef QTMMLWIDGET_H
 #define QTMMLWIDGET_H
 
+//#include <QtGui/QFrame>
 #include <QFrame>
 #include <QtXml/QtXml>
 
diff -ruN qcas/qt/main.cpp dev/qcas-qt5/qcas/qt/main.cpp
--- qcas/qt/main.cpp	2013-08-26 11:21:16.000000000 +0200
+++ dev/qcas-qt5/qcas/qt/main.cpp	2013-09-14 12:39:43.000000000 +0200
@@ -25,7 +25,7 @@
     QApplication app(argc, argv);
     setlocale(LC_NUMERIC,"POSIX");
 
-    QTextCodec::setCodecForTr(QTextCodec::codecForName("UTF-8"));
+    //QTextCodec::setCodecForTr(QTextCodec::codecForName("UTF-8"));
     MainWindow win;
     if(argc>1){
       if(win.loadFile(argv[1])){win.show();}
diff -ruN qcas/qt/output.cpp dev/qcas-qt5/qcas/qt/output.cpp
--- qcas/qt/output.cpp	2013-08-26 12:34:58.000000000 +0200
+++ dev/qcas-qt5/qcas/qt/output.cpp	2013-09-15 20:41:45.000000000 +0200
@@ -51,13 +51,13 @@
 using namespace giac;
 
 
-IconSize::IconSize(QWindowsStyle *parent) : QWindowsStyle()
+IconSize::IconSize(QProxyStyle *parent) : QProxyStyle()
    {
    Q_UNUSED (parent);
    }
 
 int IconSize::pixelMetric(PixelMetric metric, const QStyleOption * option, const QWidget * widget)const{
-   int s = QWindowsStyle::pixelMetric(metric, option, widget);
+   int s = QProxyStyle::pixelMetric(metric, option, widget);
    if (metric == QStyle::PM_SmallIconSize) {
        s = 32;
    }
@@ -3028,7 +3028,8 @@
 //}
 void Canvas2D::updatePixmap(const bool &compute){
     pixmap=QPixmap(size());
-    pixmap.fill(this,0,0);
+    //pixmap.fill(this,0,0);// deprecated in QT5
+    pixmap.fill(Qt::white);
     QPainter painter(&pixmap);    
     painter.setRenderHint(QPainter::Antialiasing,true);
     painter.setClipRect(20,20,width()-40,height()-40);
@@ -3353,7 +3354,7 @@
     else if (c=='h'&&var.length()==1) var="j";
     // letter e can't label a variable, it stands for function exp
     else if  (c=='d'&&var.length()==1) {var="f";}
-    else var[idec]=QChar(c.toAscii()+1);
+    else var[idec]=QChar(c.toLatin1()+1);
 }
 
 bool Canvas2D::checkUnderMouse(QList<MyItem*>* v, const QPointF & p){
@@ -4920,7 +4921,7 @@
                     if (currentActionTool==PLOT_BEZIER){
                         addNewBezierControlPoint();
                     }
-                    else if (currentActionTool==SINGLEPT) addNewPointElement(e->posF());
+                    else if (currentActionTool==SINGLEPT) addNewPointElement(e->localPos());
                 }
 
 
@@ -4929,7 +4930,7 @@
                 }
                 if (isMoving) {
                     isMoving=false;
-                    undoStack->push(new MoveObjectCommand(focusOwner->getLevel(),startSel,e->posF(),this));
+                    undoStack->push(new MoveObjectCommand(focusOwner->getLevel(),startSel,e->localPos(),this));
                 }
 
 
@@ -5014,7 +5015,7 @@
     }
     selectionRight=false;
 
-    QPointF mousePos(e->posF());
+    QPointF mousePos(e->localPos());
     // try to move and object
     if (parent->isInteractive()&&focusOwner!=0&& selectionLeft&&(currentActionTool==SELECT)){
 
@@ -6775,7 +6776,8 @@
     return;
   }
   Command newCommand;
-    newCommand.command=ls.at(0).remove(QRegExp("\\s+"));
+    newCommand.command=ls.at(0);
+    newCommand.command=newCommand.command.remove(QRegExp("\\s+"));
     varPt="A";
     findFreeVar(varPt);
     varLine="a";
diff -ruN qcas/qt/output.h dev/qcas-qt5/qcas/qt/output.h
--- qcas/qt/output.h	2013-08-26 11:21:16.000000000 +0200
+++ dev/qcas-qt5/qcas/qt/output.h	2013-09-14 12:14:58.000000000 +0200
@@ -28,7 +28,7 @@
 #include <QScrollArea>
 #include <QHash>
 #include <QGroupBox>
-#include <QWindowsStyle>
+#include <QProxyStyle>
 #include <QTabWidget>
 #include <QList>
 #include <QPoint>
@@ -68,11 +68,11 @@
 class CursorPanel;
 
 
-class IconSize : public QWindowsStyle
+class IconSize : public QProxyStyle
  {
    Q_OBJECT
 public:
-    explicit IconSize(QWindowsStyle *parent = 0);
+    explicit IconSize(QProxyStyle *parent = 0);
     int pixelMetric(PixelMetric metric, const QStyleOption * option = 0, const QWidget * widget = 0 ) const;
 signals:
 public slots:
